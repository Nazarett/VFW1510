//Project 2

// background color for master UI - set to black   
Ti.UI.setBackgroundColor("#000");

// JSON Objects - arrays
 var cars = [
  {"title": "John", description: "1997 Ford F150. Pulls horse trailer and off roads when necessary. Crunches enemies dead."},
  {"title": "Baby Doll", description: "1997 Saab Talledega. Convertible, great for summer fun. Luxurious on long road trips" },
  {"titl": "Guts", description: "2001 Lumina, Ugly but a great work horse for every day city driving. No fiberglass so hit it and eat dirt"}
 ];
  
var toys = [
{"title": "Juju Doll", description: "21' Islander sailboat. Sleeps 2, great for fishing and general aqueous debauchery. Pirates welcome."},
{"title": "The Baron", description: "17' Devlin all wood sailboat on trailer. Born in 1953. Great toy for beginners. Gets tired quickly."}, 
{"title": "Charlie", description: "2-horse side-lad trailer. Best towed with the Ford. Tolerates head butts and master kicks from Kohl."}
];


// MAIN WINDOW

// creates Main Widow
var mainWindow = Ti.UI.createWindow({
backgroundColor: "#c9c3c3"
});

// creates Title View for Main Widow
var titleView = Ti.UI.createView({
backgroundColor: "#f2731d",
height: 60,
top: 0
});

// creates decorative border
var border = Ti.UI.createView({
backgroundColor : "#1b1e1e",
height: 1,
top: titleView.height + titleView.top
});


// creates Label for Title View
var titleLabel = Ti.UI.createLabel({
text:"My Vehicles",
color: "#f5f5f5",
font: {fontSize: 30, familyFont: "Helvetica", fontStyle: "bold"},
textAlign: "center",
width: "100%",
top: 20
});

// creats Table View to display array of vehicles
var vehicles = Ti.UI.createTableView({
top: border.top + border.height
});

if(Ti.Platform.name === "iPhone OS"){ // for iPhone only
vehicles.style = Ti.UI.iPhone.TableViewStyle.GROUPED;
}
// creates Table Section for Cars
var carsSection = Ti.UI.createTableViewSection({
headerTitle: "Cars",
footerTitle: "These are my cars"
});
// creates Table Section for Toys
var toySection = Ti.UI.createTableViewSection({
headerTitle: "Toys",
footerTitle: "These are my toys"
});

// Function to display cars description
var carsDisplay = function(){   
// creates a new window to display descriptions
var descriptionDisplay = Ti.UI.createWindow({   // creates a new window to display descriptions
backgroundColor: "#c9c3c3"
});
// creates a new view for description display window
var displayTitleView = Ti.UI.createView({   
backgroundColor: "#f2731d",
height: 60,
top: 0
});
// creates decorative border
var displayBorder = Ti.UI.createView({
backgroundColor : "#1b1e1e",
height: 1,
top: displayTitleView.height + displayTitleView.top
});
// creates label for title
var displayTitleLabel = Ti.UI.createLabel({
text:this.title,
color: "#f5f5f5",
font: {fontSize: 30, familyFont: "Helvetica", fontStyle: "bold"},
textAlign: "center",
width: "100%",
top: 20
});

// creates label for description text
var displayText = Ti.UI.createLabel({
text: this.desc,
font: {fontSize: 26, familyFont: "Helvetica"},
top: displayBorder.height + displayBorder.top + 40,
left: 10,
right: 10
});
// creates label for back button
var backButton = Ti.UI.createLabel({
text: "Previous",
backgroundColor: "#333",
color: "#fff",
height: 50,
font: {fontSize: 24, familyFont: "Helvetica"},
width: "100%",
bottom: 0,
textAlign: "center"
});
// function to close window
var backWindow =function(){
descriptionDisplay.close();
};
backButton.addEventListener("click", backWindow);  // opens back window on click
displayTitleView.add(displayTitleLabel); // adds displayTitleLabel to displayTitleView
descriptionDisplay.add(displayTitleView, displayBorder, displayText, backButton); // adds displayTitleView, displayBorder, displayText, backButton to descriptionDisplay
descriptionDisplay.open(); // opens descriptionDisplay window
};

// for loop to get cars data
for(var i = 0, j = cars.length; i<j; i++){
var theRow = Ti.UI.createTableViewRow({
title: cars[i].title,
desc: cars[i].description,
hasChild: true
});

if(Ti.Platform.name === "iPhone OS"){  // for iOS only
theRow.hasChild = false;
theRow.hasDetail =true;
}
carsSection.add(theRow);  // adds cars section to the table row
theRow.addEventListener("click", carsDisplay); // adds event listenter to the Row that will display cars when clicked
}

// finction to get toys display
var toysDisplay = function(){
var descriptionDisplay = Ti.UI.createWindow({ 
backgroundColor: "#c9c3c3"
});
// creates title view for toys display
var displayTitleView = Ti.UI.createView({
backgroundColor: "#f2731d",
height: 60,
top: 0
});
// creates decorative border
var displayBorder = Ti.UI.createView({
backgroundColor : "#1b1e1e",
height: 1,
top: displayTitleView.height + displayTitleView.top
});
// creates title label for toys display
var displayTitleLabel = Ti.UI.createLabel({
text: this.title,
color: "#f5f5f5",
font: {fontSize: 30, familyFont: "Helvetica", fontStyle: "bold"},
textAlign: "center",
width: "100%",
top: 20
});

// creates label view to display description text
var displayText = Ti.UI.createLabel({
text: this.desc,
font: {fontSize: 26, familyFont: "Helvetica"},
top: displayBorder.height + displayBorder.top + 40,
left: 10,
right: 10
});
// creates back button label
var backButton = Ti.UI.createLabel({
text: "Previous",
backgroundColor: "#333",
color: "#fff",
height: 50,
font: {fontSize: 24, familyFont: "Helvetica"},
width: "100%",
bottom: 0,
textAlign: "center"
});
// function that closes back window
var backWindow =function(){
descriptionDisplay.close();
};
// event listener that closes back window when back button is clicked
backButton.addEventListener("click", backWindow);

displayTitleView.add(displayTitleLabel); // adds displayTitleLabel to displayTitleView
descriptionDisplay.add(displayTitleView, displayBorder, displayText, backButton); // adds displayTitleView, displayBorder,displayText, backButton to descriptionDisplay
descriptionDisplay.open(); // opens descriptionDisplay

};


for(var i = 0, j = toys.length; i<j; i++){
var theRow = Ti.UI.createTableViewRow({
title: toys[i].title,
desc: toys[i].description,
hasChild: true
});
// for iOS only
if(Ti.Platform.name === "iPhone OS"){
theRow.hasChild = false;
theRow.hasDetail =true;
}
toySection.add(theRow); // adds theRow to toy section
theRow.addEventListener("click", toysDisplay); // event listener to display toys when the row is clicked

}

var vehiclesSection = [carsSection, toySection]; // declares vehiclesSection as both carsSection and toySection

// data dislay option
vehicles.setData(vehiclesSection);

titleView.add(titleLabel);  // adds titleLebel to titleView
mainWindow.add(titleView, border, vehicles); // adds titleView, border, vehicles to mainWindow
mainWindow.open(); // opens mainWindow

